// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace GitHub.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.17.0")]
    #pragma warning disable CS1591
    public partial class Root : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The authorizations_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorizationsUrl { get; set; }
#nullable restore
#else
        public string AuthorizationsUrl { get; set; }
#endif
        /// <summary>The code_search_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CodeSearchUrl { get; set; }
#nullable restore
#else
        public string CodeSearchUrl { get; set; }
#endif
        /// <summary>The commit_search_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CommitSearchUrl { get; set; }
#nullable restore
#else
        public string CommitSearchUrl { get; set; }
#endif
        /// <summary>The current_user_authorizations_html_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrentUserAuthorizationsHtmlUrl { get; set; }
#nullable restore
#else
        public string CurrentUserAuthorizationsHtmlUrl { get; set; }
#endif
        /// <summary>The current_user_repositories_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrentUserRepositoriesUrl { get; set; }
#nullable restore
#else
        public string CurrentUserRepositoriesUrl { get; set; }
#endif
        /// <summary>The current_user_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrentUserUrl { get; set; }
#nullable restore
#else
        public string CurrentUserUrl { get; set; }
#endif
        /// <summary>The emails_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailsUrl { get; set; }
#nullable restore
#else
        public string EmailsUrl { get; set; }
#endif
        /// <summary>The emojis_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmojisUrl { get; set; }
#nullable restore
#else
        public string EmojisUrl { get; set; }
#endif
        /// <summary>The events_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EventsUrl { get; set; }
#nullable restore
#else
        public string EventsUrl { get; set; }
#endif
        /// <summary>The feeds_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FeedsUrl { get; set; }
#nullable restore
#else
        public string FeedsUrl { get; set; }
#endif
        /// <summary>The followers_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FollowersUrl { get; set; }
#nullable restore
#else
        public string FollowersUrl { get; set; }
#endif
        /// <summary>The following_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FollowingUrl { get; set; }
#nullable restore
#else
        public string FollowingUrl { get; set; }
#endif
        /// <summary>The gists_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GistsUrl { get; set; }
#nullable restore
#else
        public string GistsUrl { get; set; }
#endif
        /// <summary>The hub_url property</summary>
        [Obsolete("")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HubUrl { get; set; }
#nullable restore
#else
        public string HubUrl { get; set; }
#endif
        /// <summary>The issue_search_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssueSearchUrl { get; set; }
#nullable restore
#else
        public string IssueSearchUrl { get; set; }
#endif
        /// <summary>The issues_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IssuesUrl { get; set; }
#nullable restore
#else
        public string IssuesUrl { get; set; }
#endif
        /// <summary>The keys_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? KeysUrl { get; set; }
#nullable restore
#else
        public string KeysUrl { get; set; }
#endif
        /// <summary>The label_search_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LabelSearchUrl { get; set; }
#nullable restore
#else
        public string LabelSearchUrl { get; set; }
#endif
        /// <summary>The notifications_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NotificationsUrl { get; set; }
#nullable restore
#else
        public string NotificationsUrl { get; set; }
#endif
        /// <summary>The organization_repositories_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrganizationRepositoriesUrl { get; set; }
#nullable restore
#else
        public string OrganizationRepositoriesUrl { get; set; }
#endif
        /// <summary>The organization_teams_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrganizationTeamsUrl { get; set; }
#nullable restore
#else
        public string OrganizationTeamsUrl { get; set; }
#endif
        /// <summary>The organization_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrganizationUrl { get; set; }
#nullable restore
#else
        public string OrganizationUrl { get; set; }
#endif
        /// <summary>The public_gists_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PublicGistsUrl { get; set; }
#nullable restore
#else
        public string PublicGistsUrl { get; set; }
#endif
        /// <summary>The rate_limit_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RateLimitUrl { get; set; }
#nullable restore
#else
        public string RateLimitUrl { get; set; }
#endif
        /// <summary>The repository_search_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RepositorySearchUrl { get; set; }
#nullable restore
#else
        public string RepositorySearchUrl { get; set; }
#endif
        /// <summary>The repository_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RepositoryUrl { get; set; }
#nullable restore
#else
        public string RepositoryUrl { get; set; }
#endif
        /// <summary>The starred_gists_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StarredGistsUrl { get; set; }
#nullable restore
#else
        public string StarredGistsUrl { get; set; }
#endif
        /// <summary>The starred_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StarredUrl { get; set; }
#nullable restore
#else
        public string StarredUrl { get; set; }
#endif
        /// <summary>The topic_search_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TopicSearchUrl { get; set; }
#nullable restore
#else
        public string TopicSearchUrl { get; set; }
#endif
        /// <summary>The user_organizations_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserOrganizationsUrl { get; set; }
#nullable restore
#else
        public string UserOrganizationsUrl { get; set; }
#endif
        /// <summary>The user_repositories_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserRepositoriesUrl { get; set; }
#nullable restore
#else
        public string UserRepositoriesUrl { get; set; }
#endif
        /// <summary>The user_search_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserSearchUrl { get; set; }
#nullable restore
#else
        public string UserSearchUrl { get; set; }
#endif
        /// <summary>The user_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserUrl { get; set; }
#nullable restore
#else
        public string UserUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::GitHub.Models.Root"/> and sets the default values.
        /// </summary>
        public Root()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::GitHub.Models.Root"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::GitHub.Models.Root CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::GitHub.Models.Root();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "authorizations_url", n => { AuthorizationsUrl = n.GetStringValue(); } },
                { "code_search_url", n => { CodeSearchUrl = n.GetStringValue(); } },
                { "commit_search_url", n => { CommitSearchUrl = n.GetStringValue(); } },
                { "current_user_authorizations_html_url", n => { CurrentUserAuthorizationsHtmlUrl = n.GetStringValue(); } },
                { "current_user_repositories_url", n => { CurrentUserRepositoriesUrl = n.GetStringValue(); } },
                { "current_user_url", n => { CurrentUserUrl = n.GetStringValue(); } },
                { "emails_url", n => { EmailsUrl = n.GetStringValue(); } },
                { "emojis_url", n => { EmojisUrl = n.GetStringValue(); } },
                { "events_url", n => { EventsUrl = n.GetStringValue(); } },
                { "feeds_url", n => { FeedsUrl = n.GetStringValue(); } },
                { "followers_url", n => { FollowersUrl = n.GetStringValue(); } },
                { "following_url", n => { FollowingUrl = n.GetStringValue(); } },
                { "gists_url", n => { GistsUrl = n.GetStringValue(); } },
                { "hub_url", n => { HubUrl = n.GetStringValue(); } },
                { "issue_search_url", n => { IssueSearchUrl = n.GetStringValue(); } },
                { "issues_url", n => { IssuesUrl = n.GetStringValue(); } },
                { "keys_url", n => { KeysUrl = n.GetStringValue(); } },
                { "label_search_url", n => { LabelSearchUrl = n.GetStringValue(); } },
                { "notifications_url", n => { NotificationsUrl = n.GetStringValue(); } },
                { "organization_repositories_url", n => { OrganizationRepositoriesUrl = n.GetStringValue(); } },
                { "organization_teams_url", n => { OrganizationTeamsUrl = n.GetStringValue(); } },
                { "organization_url", n => { OrganizationUrl = n.GetStringValue(); } },
                { "public_gists_url", n => { PublicGistsUrl = n.GetStringValue(); } },
                { "rate_limit_url", n => { RateLimitUrl = n.GetStringValue(); } },
                { "repository_search_url", n => { RepositorySearchUrl = n.GetStringValue(); } },
                { "repository_url", n => { RepositoryUrl = n.GetStringValue(); } },
                { "starred_gists_url", n => { StarredGistsUrl = n.GetStringValue(); } },
                { "starred_url", n => { StarredUrl = n.GetStringValue(); } },
                { "topic_search_url", n => { TopicSearchUrl = n.GetStringValue(); } },
                { "user_organizations_url", n => { UserOrganizationsUrl = n.GetStringValue(); } },
                { "user_repositories_url", n => { UserRepositoriesUrl = n.GetStringValue(); } },
                { "user_search_url", n => { UserSearchUrl = n.GetStringValue(); } },
                { "user_url", n => { UserUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("authorizations_url", AuthorizationsUrl);
            writer.WriteStringValue("code_search_url", CodeSearchUrl);
            writer.WriteStringValue("commit_search_url", CommitSearchUrl);
            writer.WriteStringValue("current_user_authorizations_html_url", CurrentUserAuthorizationsHtmlUrl);
            writer.WriteStringValue("current_user_repositories_url", CurrentUserRepositoriesUrl);
            writer.WriteStringValue("current_user_url", CurrentUserUrl);
            writer.WriteStringValue("emails_url", EmailsUrl);
            writer.WriteStringValue("emojis_url", EmojisUrl);
            writer.WriteStringValue("events_url", EventsUrl);
            writer.WriteStringValue("feeds_url", FeedsUrl);
            writer.WriteStringValue("followers_url", FollowersUrl);
            writer.WriteStringValue("following_url", FollowingUrl);
            writer.WriteStringValue("gists_url", GistsUrl);
            writer.WriteStringValue("hub_url", HubUrl);
            writer.WriteStringValue("issue_search_url", IssueSearchUrl);
            writer.WriteStringValue("issues_url", IssuesUrl);
            writer.WriteStringValue("keys_url", KeysUrl);
            writer.WriteStringValue("label_search_url", LabelSearchUrl);
            writer.WriteStringValue("notifications_url", NotificationsUrl);
            writer.WriteStringValue("organization_repositories_url", OrganizationRepositoriesUrl);
            writer.WriteStringValue("organization_teams_url", OrganizationTeamsUrl);
            writer.WriteStringValue("organization_url", OrganizationUrl);
            writer.WriteStringValue("public_gists_url", PublicGistsUrl);
            writer.WriteStringValue("rate_limit_url", RateLimitUrl);
            writer.WriteStringValue("repository_search_url", RepositorySearchUrl);
            writer.WriteStringValue("repository_url", RepositoryUrl);
            writer.WriteStringValue("starred_gists_url", StarredGistsUrl);
            writer.WriteStringValue("starred_url", StarredUrl);
            writer.WriteStringValue("topic_search_url", TopicSearchUrl);
            writer.WriteStringValue("user_organizations_url", UserOrganizationsUrl);
            writer.WriteStringValue("user_repositories_url", UserRepositoriesUrl);
            writer.WriteStringValue("user_search_url", UserSearchUrl);
            writer.WriteStringValue("user_url", UserUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
