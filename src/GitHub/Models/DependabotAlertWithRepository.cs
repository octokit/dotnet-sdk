// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace GitHub.Models
{
    /// <summary>
    /// A Dependabot alert.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.17.0")]
    public partial class DependabotAlertWithRepository : IParsable
    {
        /// <summary>The time that the alert was auto-dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.</summary>
        public DateTimeOffset? AutoDismissedAt { get; private set; }
        /// <summary>The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>Details for the vulnerable dependency.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::GitHub.Models.DependabotAlertWithRepository_dependency? Dependency { get; private set; }
#nullable restore
#else
        public global::GitHub.Models.DependabotAlertWithRepository_dependency Dependency { get; private set; }
#endif
        /// <summary>The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.</summary>
        public DateTimeOffset? DismissedAt { get; private set; }
        /// <summary>A GitHub user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::GitHub.Models.NullableSimpleUser? DismissedBy { get; set; }
#nullable restore
#else
        public global::GitHub.Models.NullableSimpleUser DismissedBy { get; set; }
#endif
        /// <summary>An optional comment associated with the alert&apos;s dismissal.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DismissedComment { get; set; }
#nullable restore
#else
        public string DismissedComment { get; set; }
#endif
        /// <summary>The reason that the alert was dismissed.</summary>
        public global::GitHub.Models.DependabotAlertWithRepository_dismissed_reason? DismissedReason { get; set; }
        /// <summary>The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.</summary>
        public DateTimeOffset? FixedAt { get; private set; }
        /// <summary>The GitHub URL of the alert resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HtmlUrl { get; private set; }
#nullable restore
#else
        public string HtmlUrl { get; private set; }
#endif
        /// <summary>The security alert number.</summary>
        public int? Number { get; private set; }
        /// <summary>A GitHub repository.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::GitHub.Models.SimpleRepository? Repository { get; set; }
#nullable restore
#else
        public global::GitHub.Models.SimpleRepository Repository { get; set; }
#endif
        /// <summary>Details for the GitHub Security Advisory.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::GitHub.Models.DependabotAlertSecurityAdvisory? SecurityAdvisory { get; private set; }
#nullable restore
#else
        public global::GitHub.Models.DependabotAlertSecurityAdvisory SecurityAdvisory { get; private set; }
#endif
        /// <summary>Details pertaining to one vulnerable version range for the advisory.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::GitHub.Models.DependabotAlertSecurityVulnerability? SecurityVulnerability { get; private set; }
#nullable restore
#else
        public global::GitHub.Models.DependabotAlertSecurityVulnerability SecurityVulnerability { get; private set; }
#endif
        /// <summary>The state of the Dependabot alert.</summary>
        public global::GitHub.Models.DependabotAlertWithRepository_state? State { get; private set; }
        /// <summary>The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.</summary>
        public DateTimeOffset? UpdatedAt { get; private set; }
        /// <summary>The REST API URL of the alert resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; private set; }
#nullable restore
#else
        public string Url { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::GitHub.Models.DependabotAlertWithRepository"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::GitHub.Models.DependabotAlertWithRepository CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::GitHub.Models.DependabotAlertWithRepository();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "auto_dismissed_at", n => { AutoDismissedAt = n.GetDateTimeOffsetValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "dependency", n => { Dependency = n.GetObjectValue<global::GitHub.Models.DependabotAlertWithRepository_dependency>(global::GitHub.Models.DependabotAlertWithRepository_dependency.CreateFromDiscriminatorValue); } },
                { "dismissed_at", n => { DismissedAt = n.GetDateTimeOffsetValue(); } },
                { "dismissed_by", n => { DismissedBy = n.GetObjectValue<global::GitHub.Models.NullableSimpleUser>(global::GitHub.Models.NullableSimpleUser.CreateFromDiscriminatorValue); } },
                { "dismissed_comment", n => { DismissedComment = n.GetStringValue(); } },
                { "dismissed_reason", n => { DismissedReason = n.GetEnumValue<global::GitHub.Models.DependabotAlertWithRepository_dismissed_reason>(); } },
                { "fixed_at", n => { FixedAt = n.GetDateTimeOffsetValue(); } },
                { "html_url", n => { HtmlUrl = n.GetStringValue(); } },
                { "number", n => { Number = n.GetIntValue(); } },
                { "repository", n => { Repository = n.GetObjectValue<global::GitHub.Models.SimpleRepository>(global::GitHub.Models.SimpleRepository.CreateFromDiscriminatorValue); } },
                { "security_advisory", n => { SecurityAdvisory = n.GetObjectValue<global::GitHub.Models.DependabotAlertSecurityAdvisory>(global::GitHub.Models.DependabotAlertSecurityAdvisory.CreateFromDiscriminatorValue); } },
                { "security_vulnerability", n => { SecurityVulnerability = n.GetObjectValue<global::GitHub.Models.DependabotAlertSecurityVulnerability>(global::GitHub.Models.DependabotAlertSecurityVulnerability.CreateFromDiscriminatorValue); } },
                { "state", n => { State = n.GetEnumValue<global::GitHub.Models.DependabotAlertWithRepository_state>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::GitHub.Models.NullableSimpleUser>("dismissed_by", DismissedBy);
            writer.WriteStringValue("dismissed_comment", DismissedComment);
            writer.WriteEnumValue<global::GitHub.Models.DependabotAlertWithRepository_dismissed_reason>("dismissed_reason", DismissedReason);
            writer.WriteObjectValue<global::GitHub.Models.SimpleRepository>("repository", Repository);
        }
    }
}
