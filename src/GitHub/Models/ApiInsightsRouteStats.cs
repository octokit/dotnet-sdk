// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace GitHub.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    #pragma warning disable CS1591
    public partial class ApiInsightsRouteStats : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The API path&apos;s route template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ApiRoute { get; set; }
#nullable restore
#else
        public string ApiRoute { get; set; }
#endif
        /// <summary>The HTTP method</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HttpMethod { get; set; }
#nullable restore
#else
        public string HttpMethod { get; set; }
#endif
        /// <summary>The last_rate_limited_timestamp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastRateLimitedTimestamp { get; set; }
#nullable restore
#else
        public string LastRateLimitedTimestamp { get; set; }
#endif
        /// <summary>The last_request_timestamp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastRequestTimestamp { get; set; }
#nullable restore
#else
        public string LastRequestTimestamp { get; set; }
#endif
        /// <summary>The total number of requests that were rate limited within the queried time period</summary>
        public long? RateLimitedRequestCount { get; set; }
        /// <summary>The total number of requests within the queried time period</summary>
        public long? TotalRequestCount { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::GitHub.Models.ApiInsightsRouteStats"/> and sets the default values.
        /// </summary>
        public ApiInsightsRouteStats()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::GitHub.Models.ApiInsightsRouteStats"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::GitHub.Models.ApiInsightsRouteStats CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::GitHub.Models.ApiInsightsRouteStats();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "api_route", n => { ApiRoute = n.GetStringValue(); } },
                { "http_method", n => { HttpMethod = n.GetStringValue(); } },
                { "last_rate_limited_timestamp", n => { LastRateLimitedTimestamp = n.GetStringValue(); } },
                { "last_request_timestamp", n => { LastRequestTimestamp = n.GetStringValue(); } },
                { "rate_limited_request_count", n => { RateLimitedRequestCount = n.GetLongValue(); } },
                { "total_request_count", n => { TotalRequestCount = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("api_route", ApiRoute);
            writer.WriteStringValue("http_method", HttpMethod);
            writer.WriteStringValue("last_rate_limited_timestamp", LastRateLimitedTimestamp);
            writer.WriteStringValue("last_request_timestamp", LastRequestTimestamp);
            writer.WriteLongValue("rate_limited_request_count", RateLimitedRequestCount);
            writer.WriteLongValue("total_request_count", TotalRequestCount);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
