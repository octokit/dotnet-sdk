// <auto-generated/>
#pragma warning disable CS0618
using GitHub.Repos.Item.Item.CodeScanning.Alerts;
using GitHub.Repos.Item.Item.CodeScanning.Analyses;
using GitHub.Repos.Item.Item.CodeScanning.Codeql;
using GitHub.Repos.Item.Item.CodeScanning.DefaultSetup;
using GitHub.Repos.Item.Item.CodeScanning.Sarifs;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace GitHub.Repos.Item.Item.CodeScanning
{
    /// <summary>
    /// Builds and executes requests for operations under \repos\{owner-id}\{repo-id}\code-scanning
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    public partial class CodeScanningRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The alerts property</summary>
        public global::GitHub.Repos.Item.Item.CodeScanning.Alerts.AlertsRequestBuilder Alerts
        {
            get => new global::GitHub.Repos.Item.Item.CodeScanning.Alerts.AlertsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The analyses property</summary>
        public global::GitHub.Repos.Item.Item.CodeScanning.Analyses.AnalysesRequestBuilder Analyses
        {
            get => new global::GitHub.Repos.Item.Item.CodeScanning.Analyses.AnalysesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The codeql property</summary>
        public global::GitHub.Repos.Item.Item.CodeScanning.Codeql.CodeqlRequestBuilder Codeql
        {
            get => new global::GitHub.Repos.Item.Item.CodeScanning.Codeql.CodeqlRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The defaultSetup property</summary>
        public global::GitHub.Repos.Item.Item.CodeScanning.DefaultSetup.DefaultSetupRequestBuilder DefaultSetup
        {
            get => new global::GitHub.Repos.Item.Item.CodeScanning.DefaultSetup.DefaultSetupRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sarifs property</summary>
        public global::GitHub.Repos.Item.Item.CodeScanning.Sarifs.SarifsRequestBuilder Sarifs
        {
            get => new global::GitHub.Repos.Item.Item.CodeScanning.Sarifs.SarifsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::GitHub.Repos.Item.Item.CodeScanning.CodeScanningRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CodeScanningRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repos/{owner%2Did}/{repo%2Did}/code-scanning", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::GitHub.Repos.Item.Item.CodeScanning.CodeScanningRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CodeScanningRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/repos/{owner%2Did}/{repo%2Did}/code-scanning", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
