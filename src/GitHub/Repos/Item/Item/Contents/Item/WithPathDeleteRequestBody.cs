// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace GitHub.Repos.Item.Item.Contents.Item
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class WithPathDeleteRequestBody : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>object containing information about the author.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_author? Author { get; set; }
#nullable restore
#else
        public global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_author Author { get; set; }
#endif
        /// <summary>The branch name. Default: the repositoryâ€™s default branch</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Branch { get; set; }
#nullable restore
#else
        public string Branch { get; set; }
#endif
        /// <summary>object containing information about the committer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_committer? Committer { get; set; }
#nullable restore
#else
        public global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_committer Committer { get; set; }
#endif
        /// <summary>The commit message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Message { get; set; }
#nullable restore
#else
        public string Message { get; set; }
#endif
        /// <summary>The blob SHA of the file being deleted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sha { get; set; }
#nullable restore
#else
        public string Sha { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody"/> and sets the default values.
        /// </summary>
        public WithPathDeleteRequestBody()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "author", n => { Author = n.GetObjectValue<global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_author>(global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_author.CreateFromDiscriminatorValue); } },
                { "branch", n => { Branch = n.GetStringValue(); } },
                { "committer", n => { Committer = n.GetObjectValue<global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_committer>(global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_committer.CreateFromDiscriminatorValue); } },
                { "message", n => { Message = n.GetStringValue(); } },
                { "sha", n => { Sha = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_author>("author", Author);
            writer.WriteStringValue("branch", Branch);
            writer.WriteObjectValue<global::GitHub.Repos.Item.Item.Contents.Item.WithPathDeleteRequestBody_committer>("committer", Committer);
            writer.WriteStringValue("message", Message);
            writer.WriteStringValue("sha", Sha);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
