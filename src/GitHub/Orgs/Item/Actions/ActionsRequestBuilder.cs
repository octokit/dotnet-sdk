// <auto-generated/>
#pragma warning disable CS0618
using GitHub.Orgs.Item.Actions.Cache;
using GitHub.Orgs.Item.Actions.Oidc;
using GitHub.Orgs.Item.Actions.Permissions;
using GitHub.Orgs.Item.Actions.Runners;
using GitHub.Orgs.Item.Actions.Secrets;
using GitHub.Orgs.Item.Actions.Variables;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace GitHub.Orgs.Item.Actions
{
    /// <summary>
    /// Builds and executes requests for operations under \orgs\{org}\actions
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    public partial class ActionsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The cache property</summary>
        public global::GitHub.Orgs.Item.Actions.Cache.CacheRequestBuilder Cache
        {
            get => new global::GitHub.Orgs.Item.Actions.Cache.CacheRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The oidc property</summary>
        public global::GitHub.Orgs.Item.Actions.Oidc.OidcRequestBuilder Oidc
        {
            get => new global::GitHub.Orgs.Item.Actions.Oidc.OidcRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The permissions property</summary>
        public global::GitHub.Orgs.Item.Actions.Permissions.PermissionsRequestBuilder Permissions
        {
            get => new global::GitHub.Orgs.Item.Actions.Permissions.PermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The runners property</summary>
        public global::GitHub.Orgs.Item.Actions.Runners.RunnersRequestBuilder Runners
        {
            get => new global::GitHub.Orgs.Item.Actions.Runners.RunnersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The secrets property</summary>
        public global::GitHub.Orgs.Item.Actions.Secrets.SecretsRequestBuilder Secrets
        {
            get => new global::GitHub.Orgs.Item.Actions.Secrets.SecretsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The variables property</summary>
        public global::GitHub.Orgs.Item.Actions.Variables.VariablesRequestBuilder Variables
        {
            get => new global::GitHub.Orgs.Item.Actions.Variables.VariablesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::GitHub.Orgs.Item.Actions.ActionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ActionsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/orgs/{org}/actions", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::GitHub.Orgs.Item.Actions.ActionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ActionsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/orgs/{org}/actions", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
